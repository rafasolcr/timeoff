{
  "Description": "Timeoff cloudformation template",
  "AWSTemplateFormatVersion": "2010-09-09",
  "Parameters": {
    "KeyName": {
      "Description": "Name of an existing EC2 KeyPair to enable ssh access to the instance",
      "Type": "AWS::EC2::KeyPair::KeyName",
      "Default": "aws1",
      "ConstraintDescription": "must be the name of an existing EC2 KeyPair."
    },
    "TOTaskDefinition": {
      "Description": "Name of Task Definition and revision number",
      "Type": "String",
      "Default": "arn:aws:ecs:us-east-1:087533072584:task-definition/timeoff:2"
    }
  },
  "Resources": {
    "TOCluster": {
      "Type": "AWS::ECS::Cluster"
    },
    "TOService": {
      "Type": "AWS::ECS::Service",
      "Properties": {
        "Cluster": {
          "Ref": "TOCluster"
        },
        "DesiredCount": 2,
        "TaskDefinition": {
          "Ref": "TOTaskDefinition"
        },
        "DeploymentConfiguration": {
          "MinimumHealthyPercent": 50,
          "MaximumPercent": 200
        }
      },
      "DependsOn": "TOAutoScalingGroup"
    },
    "TOLoadBalancer": {
      "Type": "AWS::ElasticLoadBalancing::LoadBalancer",
      "Properties": {
        "ConnectionDrainingPolicy": {
          "Enabled": true,
          "Timeout": 300
        },
        "CrossZone": true,
        "HealthCheck": {
          "HealthyThreshold": "3",
          "Interval": "30",
          "Target": "TCP:80",
          "Timeout": "5",
          "UnhealthyThreshold": "5"
        },
        "Listeners": [
          {
            "InstancePort": "80",
            "InstanceProtocol": "TCP",
            "LoadBalancerPort": "80",
            "Protocol": "TCP"
          }
        ],
        "Scheme": "internet-facing",
        "Subnets": ["subnet-cc6af2e2"]
      }
    },
    "TOServiceRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "ec2.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Path": "/",
        "Policies": [
          {
            "PolicyName": "ecs-service",
            "PolicyDocument": {
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": "*",
                  "Resource": "*"
                }
              ]
            }
          }
        ]
      }
    },
    "TOInstanceProfile": {
      "Type": "AWS::IAM::InstanceProfile",
      "Properties": {
         "Roles": [{"Ref": "TOServiceRole"}]
      }
    },
    "TOAutoScalingGroup": {
      "Type": "AWS::AutoScaling::AutoScalingGroup",
      "Properties": {
        "MinSize": "1",
        "MaxSize": "3",
        "DesiredCapacity": "2",
        "LaunchConfigurationName": {
          "Ref": "TOLaunchConfiguration"
        },
        "Tags" : [ 
          {
            "Key" : "Name",
            "Value" : "ECS Instance (TimeOff)",
            "PropagateAtLaunch" : true
          }
        ],
        "VPCZoneIdentifier": ["subnet-cc6af2e2"],
        "LoadBalancerNames": [{"Ref": "TOLoadBalancer"}]
      }
    },
    "TOLaunchConfiguration": {
      "Type": "AWS::AutoScaling::LaunchConfiguration",
      "Properties": {
        "ImageId": "ami-011a85ba0ae2013bf",
        "KeyName": {"Ref": "KeyName"},
        "InstanceType": "t2.micro",
        "SecurityGroups": ["sg-d6a19b96"],
        "UserData": {"Fn::Base64": {"Fn::Join": ["",[
          "#!/bin/bash -vxe\n",
          "yum install -y aws-cli aws-cfn-bootstrap\n",
          "yum update -y ecs-init\n",
          "echo 'ECS_CLUSTER=",{"Ref": "TOCluster"},"' > /etc/ecs/ecs.config\n",
          "/opt/aws/bin/cfn-init -v ",
          "         --stack ", { "Ref" : "AWS::StackName" },
          "         --resource TOLaunchConfiguration ",
          "         --region ", { "Ref" : "AWS::Region" }, "\n",
          "/opt/aws/bin/cfn-signal -s true ",
          "         --stack ", { "Ref" : "AWS::StackName" },
          "         --resource TOAutoScalingGroup ",
          "         --region ", { "Ref" : "AWS::Region" }, "\n"
      ]]}},
      "IamInstanceProfile": {"Ref":"TOInstanceProfile"}
      },
      "Metadata" : {
        "AWS::CloudFormation::Init" : {
          "config" : {
            "services" : {
              "sysvinit" : {
                "docker" : { "enabled" : "true", "ensureRunning" : "true" }
              }
            }
          }
        }
      }
    }
  }
}